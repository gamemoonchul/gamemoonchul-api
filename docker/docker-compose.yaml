services:
  gm-db:
    networks:
      - gm-network
    image: mysql:8.4.3
    environment:
      MYSQL_ROOT_PASSWORD: df159357
      MYSQL_DATABASE: gamemuncheol
    ports:
      - "3306:3306"

  gm-redis:
    networks:
      - gm-network
    image: redis:latest
    container_name: main-redis
    environment:
      REDIS_PASSWORD: df159357
    ports:
      - "6379:6379"
    volumes:
      - ./redis/gm-redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  gm-be:
    networks:
      - gm-network
    depends_on:
      - gm-db
      - gm-redis
    image: gm-local
    build:
      # 상위 경로를 지정해줘야 Dockerfile에서 상위 경로의 파일을 참조할 수 있다.
      # 예를 들어서 Context를 .으로 하고 Dockerfile에서 ../build/libs 이런식으로는 접근이 불가능하다.
      context: ..
      dockerfile: ./docker/Dockerfile
    env_file:
      - ../.env
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - TZ=Asia/Seoul
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8g
        reservations:
          cpus: '4'
          memory: 8g

  grafana:
    networks:
      - gm-network
    image: bitnami/grafana:latest
    container_name: grafana
    ports:
      - "4885:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=df159357

  prometheus:
    networks:
      - gm-network
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml

networks:
  gm-network:
    driver: bridge
