jwt:
  secret: dsjkfldsjklfssakRJLKASjdkldjklJSaklfajDLASjdklASJkljasklhDALShdlkadhLAJSdklAAWIdjakdsjLADadDAdAd

cloud:
  aws:
    s3:
      bucket: test
    credentials:
      access-key: adsadsadsa
      secret-key: adsadsadsa
    stack:
      auto: false
    region:
      static: adsadsadsa
      auto: false

lol:
  api:
    key: apisdhsjkdhfkjdhfjkdhfkjewrsdfsdfsdfafds

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: adsadsadsa
            client-secret: adsadsadsa
            scope:
              - email
              - profile
          apple:
            client-id: adsadsadsa # input apple client id
            redirect-uri: '${baseUrl}/login/oauth2/code/apple'
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Apple
            scope:
              - openid
              - email
              - name
        provider:
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize?response_mode=form_post
            token-uri: https://appleid.apple.com/auth/token
            jwk-set-uri: https://appleid.apple.com/auth/keys
  jpa:
    show-sql: true
    properties:
      format_sql: true
      dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  datasource:
    # jdbc:mysql://localhost:3306/[TABLE NAME]?userSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
    url:
    driver-class-name: com.mysql.jdbc.Driver
    username:
    password:
  data:
    redis:
      host: localhost
      port: 6379

apple:
  clientId: adsadsadsa
  keyId: adsadsadsa
  teamId: adsadsadsa
  privateKey: adsadsadsa

logging:
  level:
    root: error